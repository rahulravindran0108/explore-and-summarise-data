ggplot(maxregions, aes(x=item, fill=count)) +
geom_histogram(binwidth=.5, alpha=.5, position="identity")
ggplot(maxregions, aes(x=count, colour=item)) + geom_density()
ggplot(out, aes(x=item, colour=item)) + geom_density()
ggplot(out, aes(x=items, colour=item)) +
geom_histogram()
ggplot(out, aes(x=item, colour=item)) +
geom_histogram()
ggplot(data = maxregions, aes(x=item, colour = item), y = count)+geom_bar(stat="identity") +
coord_flip()
ggplot(data = maxregions, aes(x=item, colour = item), y = count)
ggplot(data = maxregions, aes(x=item), y = count)
ggplot(maxregions, aes(x=item), y = count)
ggplot(maxregions, aes(x=item), y = count)+geom_bar(stat="identity")
ggplot(maxregions, aes(x=item), y = count)+geom_bar(stat="identity")
ggplot(maxregions, aes(x=item), y = count)+geon_histogram()+geom_bar(stat="identity")
ggplot(maxregions, aes(x=item), y = count)+geom_histogram()+geom_bar(stat="identity")
ggplot(maxregions, aes(x=item, y = count))+geom_bar(stat="identity")
ggplot(maxregions, aes(x=item, y = count, fill = count))+geom_bar(stat="identity")
ggplot(maxregions, aes(x=item, y = count, fill = count))+geom_bar(stat="identity")+xlab("County Names")+ylab("Number of weather events occurred")
ggplot(maxregions, aes(x=item, y = count, fill = count))+geom_bar(stat="identity")+xlab("County Names")+ylab("Number of weather events occurred")+legend("Larges number of events that have occurred in Countys")
ggplot(maxregions, aes(x=item, y = count, fill = count))+geom_bar(stat="identity")+xlab("County Names")+ylab("Number of weather events occurred")+title("Largest number of events that have occurred in Countys")
ggplot(maxregions, aes(x=item, y = count, fill = count))+geom_bar(stat="identity")+xlab("County Names")+ylab("Number of weather events occurred")+main("Largest number of events that have occurred in Countys")
ggplot(maxregions, aes(x=item, y = count, fill = count))+geom_bar(stat="identity")+xlab("County Names")+ylab("Number of weather events occurred")+ggtitle("Largest number of events that have occurred in Countys")
washington<-subset(smallData, COUNTYNAME == "WASHINGTON")
table(washington$category)
washington=data.frame(item=names(unlist(washington)),count=unlist(washington)[],
stringsAsFactors=FALSE)
washingotn
washington
washington<-subset(smallData, COUNTYNAME == "WASHINGTON")
washington<-table(washington$category)
washington<-data.frame(events=names(unlist(washington)), count = unlist(washington)[], stringsAsFactors = FALSE)
washington
ggplot(washington, aes(x=events, y = count, fill = count))+geom_bar(stat="identity")+xlab("Events")+ylab("Number of occurrences")+ggtitle("Most prominent Disaster in Washington")
washington<-subset(smallData, COUNTYNAME == "WASHINGTON" & FATALITIES > 0)
table(washington$category)
table(washington$EVTYPE)
ggplot(smallData, aes(x=category,y=FATALITIES))+geom_point(shape=1)
ggplot(smallData, aes(x=propertydamage,y=FATALITIES))+geom_point(shape=1)
ggplot(smallData, aes(x=INJURIES,y=FATALITIES))+geom_point(shape=1)
ggplot(smallData, aes(x=INJURIES,y=FATALITIES))+geom_point(shape=1)+geom_smooth(method=lm)
ggplot(smallData, aes(x=INJURIES,y=FATALITIES))+geom_point(shape=1)+geom_smooth()
ggplot(smallData, aes(x=INJURIES,y=FATALITIES))+geom_point(shape=1)+geom_smooth()+scale_y_continuous()
ggplot(smallData, aes(x=INJURIES,y=FATALITIES))+geom_point(shape=1)+geom_smooth()+scale_y_continuous(limits = c(0,100))
ggplot(smallData, aes(x=INJURIES,y=FATALITIES))+geom_point(shape=1)+geom_smooth()+scale_y_continuous(limits = c(0,100)) + scale_x_continuous(limits = c(0,1000))
fatalities<-subset(smallData,FATALITIES >0 & INJURIES > 0)
ggplot(fatalities, aes(x=INJURIES,y=FATALITIES))+geom_point(shape=1)+geom_smooth()+scale_y_continuous(limits = c(0,100)) + scale_x_continuous(limits = c(0,1000))
ggplot(fatalities, aes(x=INJURIES,y=FATALITIES, color=category))+geom_point(shape=1)+geom_smooth()+scale_y_continuous(limits = c(0,100)) + scale_x_continuous(limits = c(0,1000))
ggplot(fatalities, aes(x=PROPDMG,y=CROPDMG, color=category))+geom_point(shape=1)+geom_smooth()+scale_y_continuous(limits = c(0,100)) + scale_x_continuous(limits = c(0,1000))
ggplot(fatalities, aes(x=PROPDMG,y=CROPDMG, color=category))+geom_point(shape=1)+geom_smooth()
ggplot(fatalities, aes(x=EVTYPE,y=CROPDMG, color=category))+geom_point(shape=1)+geom_smooth()
ggplot(fatalities, aes(x=category,y=CROPDMG, color=category))+geom_point(shape=1)+geom_smooth()
ggplot(fatalities, aes(x=LATITUDE,y=CROPDMG, color=category))+geom_point(shape=1)+geom_smooth()
ggplot(fatalities, aes(x=propertydamage,y=CROPDMG, color=category))+geom_point(shape=1)+geom_smooth()
ggplot(fatalities, aes(x=PROPDMG,y=CROPDMG, color=category))+geom_point(shape=1)+geom_smooth()
ggplot(fatalities, aes(x=PROPDMG,y=CROPDMG,)+geom_point(shape=1)+geom_smooth()+facet_grid(~ . categoory)
ggplot(fatalities, aes(x=PROPDMG,y=CROPDMG,)+geom_point(shape=1)+geom_smooth()+facet_grid(~ . category)
x<-ggplot(fatalities, aes(x=PROPDMG,y=CROPDMG,)+geom_point(shape=1)+geom_smooth()
)
x<-ggplot(fatalities, aes(x=PROPDMG,y=CROPDMG,))+geom_point(shape=1)+geom_smooth()+facet_grid(~ . category)
x<-ggplot(fatalities, aes(x=PROPDMG,y=CROPDMG,))+geom_point(shape=1)+geom_smooth()
x + facet_grid(~.category)
x + facet_grid(category)
x + facet_grid(~ . category)
x + facet_grid(. ~ category)
x + facet_grid(. ~ category)+scale_y_continuous(limits=c(0,1000))
ggplot(smallData, aes(LONGITUDE, LATITUDE, colour = factor(cut(smallData$FATALITIES,
+     100, label = FALSE)))) + geom_point(size = 4) + geom_point(size = 4,
+     shape = 1, colour = "steelblue", alpha = 0.4) + labs(x = "Longitude",
+     y = "Latitude") + scale_colour_grey() + theme_bw() +
+     opts(legend.position = "none") + coord_equal()
ggplot(smallData, aes(LONGITUDE, LATITUDE, colour = factor(cut(smallData$FATALITIES,
+     100, label = FALSE)))) + geom_point(size = 4) + geom_point(size = 4,
+     shape = 1, colour = "steelblue", alpha = 0.4) + labs(x = "Longitude",
+     y = "Latitude") + scale_colour_grey() + theme_bw() +
+ coord_equal()
ggplot(smallData, aes(LONGITUDE, LATITUDE, colour = factor(cut(smallData$FATALITIES,
+     100, label = FALSE)))) + geom_point(size = 4) + geom_point(size = 4,
+     shape = 1, colour = "steelblue", alpha = 0.4) + labs(x = "Longitude",
+     y = "Latitude") + scale_colour_grey() + theme_bw()
ggplot(smallData, aes(LONGITUDE, LATITUDE, colour = factor(cut(smallData$FATALITIES,
+     100, label = FALSE)))) + geom_point(size = 4) + geom_point(size = 4,
+     shape = 1, colour = "steelblue", alpha = 0.4) +
scale_colour_grey() + theme_bw()
ggplot(smallData, aes(LONGITUDE, LATITUDE, colour = factor(cut(smallData$FATALITIES,
+     100, label = FALSE)))) + geom_point(size = 4)
ggplot(smallData, aes(LONGITUDE, LATITUDE, colour = factor(cut(smallData$FATALITIES, label = FALSE)))) + geom_point(size = 4)
ggplot(smallData, aes(LONGITUDE, LATITUDE, colour = factor(cut(smallData$FATALITIES,100, label = FALSE)))) + geom_point(size = 4) + geom_point(size = 4,shape = 1, colour = "steelblue", alpha = 0.4) + labs(x = "Longitude", y = "Latitude") + scale_colour_grey() + theme_bw()
ggplot(smallData, aes(LONGITUDE, LATITUDE, colour = factor(cut(smallData$FATALITIES,100, label = FALSE)))) + geom_point(size = 4) + geom_point(size = 4,shape = 1, colour = "steelblue", alpha = 0.4) + labs(x = "Longitude", y = "Latitude") + scale_colour_grey() + theme_bw()+facet_grid(~category)
pairs(~FATALITIES+INJURIES+PROPDMG+CROPDMG,data=smallData,
main="Simple Scatterplot Matrix for various variables")
library(maps)
install.packages('maps')
library(maps)
ggplot(smallData, aes(map_id = STATE))
smallData$Affected<-smallData$INJURIES+smallData$FATALITIES
states_map <- map_data("state")
ggplot(smallData, aes(map_id = STATE))+geom_map(aes(fill = Affected), map = states_map, colour='black')+expand_limits(x = states_map$long, y = states_map$lat)+ coord_map() + theme_bw()
install.packages('mapproj')
library(mapproj)
ggplot(smallData, aes(map_id = STATE))+geom_map(aes(fill = Affected), map = states_map, colour='black')+expand_limits(x = states_map$long, y = states_map$lat)+ coord_map() + theme_bw()
ggplot(smallData, aes(map_id = STATE))+geom_map(aes(fill = Affected), map = states_map, colour='black')
tmp <- merge(
data.table(STATE=sort(unique(smallData$STATE))),
dt[
list(
COUNT=sum(COUNT),
INJURIES=sum(INJURIES),
FATALITIES=sum(FATALITIES),
PROPDMG=round(sum(PROPDMG), 2),
CROPDMG=round(sum(CROPDMG), 2)
),
by=list(STATE)],
by=c('STATE'), all=TRUE
)
tmp[is.na(tmp)] <- 0
tmp <- merge(
+     data.table(STATE=sort(unique(smallData$STATE))),
+     dt[
+         list(
+             COUNT=sum(COUNT),
+             INJURIES=sum(INJURIES),
+             FATALITIES=sum(FATALITIES),
+             PROPDMG=round(sum(PROPDMG), 2),
+             CROPDMG=round(sum(CROPDMG), 2)
+         ),
+         by=list(STATE)],
+     by=c('STATE'), all=TRUE
+ )
tmp <- merge(
data.table(STATE=sort(unique(smallData$STATE))),
smallData[
list(
COUNT=sum(COUNT),
INJURIES=sum(INJURIES),
FATALITIES=sum(FATALITIES),
PROPDMG=round(sum(PROPDMG), 2),
CROPDMG=round(sum(CROPDMG), 2)
),
by=list(STATE)],
by=c('STATE'), all=TRUE
)
tmp <- merge(
smallData.table(STATE=sort(unique(smallData$STATE))),
smallData[
list(
COUNT=sum(COUNT),
INJURIES=sum(INJURIES),
FATALITIES=sum(FATALITIES),
PROPDMG=round(sum(PROPDMG), 2),
CROPDMG=round(sum(CROPDMG), 2)
),
by=list(STATE)],
by=c('STATE'), all=TRUE
)
p <- ggplot(smallData, aes(map_id = STATE))
p <- p + geom_map(aes(fill = Affected), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
print(p)
p + coord_map() + theme_bw()
p <- ggplot(smallData, aes(map_id = STATE))
p <- p + geom_map(aes(fill = Affected), map = states_map, colour='black')
print(p)
smallData$Affected
smallData[
list(
COUNT=sum(COUNT),
INJURIES=sum(INJURIES),
FATALITIES=sum(FATALITIES),
PROPDMG=round(sum(PROPDMG), 2),
CROPDMG=round(sum(CROPDMG), 2)
),
by=list(STATE)]
smallData[
list(
COUNT=sum(COUNT),
INJURIES=sum(INJURIES),
FATALITIES=sum(FATALITIES),
PROPDMG=round(sum(PROPDMG), 2),
CROPDMG=round(sum(CROPDMG), 2)
),
by=list(STATE)]
smallData[YEAR>=1950,
list(
COUNT=sum(COUNT),
INJURIES=sum(INJURIES),
FATALITIES=sum(FATALITIES),
PROPDMG=round(sum(PROPDMG), 2),
CROPDMG=round(sum(CROPDMG), 2)
),
by=list(STATE)]
library(data.table)
install.packages('data.table')
library(data.table)
tmp <- merge(
data.table(STATE=sort(unique(smallData$STATE))),
dt[
Affected>0,
list(
COUNT=sum(COUNT),
INJURIES=sum(INJURIES),
FATALITIES=sum(FATALITIES),
PROPDMG=round(sum(PROPDMG), 2),
CROPDMG=round(sum(CROPDMG), 2)
),
by=list(STATE)],
by=c('STATE'), all=TRUE
)
tmp <- merge(
data.table(STATE=sort(unique(smallData$STATE))),
smallData[
Affected>0,
list(
COUNT=sum(COUNT),
INJURIES=sum(INJURIES),
FATALITIES=sum(FATALITIES),
PROPDMG=round(sum(PROPDMG), 2),
CROPDMG=round(sum(CROPDMG), 2)
),
by=list(STATE)],
by=c('STATE'), all=TRUE
)
tmp <- merge(
data.table(STATE=sort(unique(smallData$STATE))),
smallData[
Affected>0,
list(
COUNT=sum(COUNT),
INJURIES=sum(INJURIES),
FATALITIES=sum(FATALITIES),
PROPDMG=round(sum(PROPDMG), 2),
CROPDMG=round(sum(CROPDMG), 2)
)],
by=c('STATE'), all=TRUE
)
tmp <- merge(
data.table(STATE=sort(unique(smallData$STATE))),
smallData[
Affected>0,
list(
INJURIES=sum(INJURIES),
FATALITIES=sum(FATALITIES),
PROPDMG=round(sum(PROPDMG), 2),
CROPDMG=round(sum(CROPDMG), 2)
)],
by=c('STATE'), all=TRUE
)
aggdata<-aggregate(smallData,by=list(STATE))
aggdata<-aggregate(smallData,by=list(STATE),FUN=sum)
aggdata<-aggregate(smallData,by=list(smallData$STATE),FUN=sum)
aggdata<-aggregate(smallData[,c('FATALITIES','INJURIES','PROPDMG','CROPDMG')],by=list(smallData$STATE),FUN=sum)
aggdata
colnames(aggdata)<-c("FATALITIES","INJURIES","PROPDMG","CROPDMG")
aggdata
colnames(aggdata)<-c("STATE",FATALITIES","INJURIES","PROPDMG","CROPDMG")
colnames(aggdata)<-c("STATE","FATALITIES","INJURIES","PROPDMG","CROPDMG")
aggdata
states_map <- map_data("state")
aggdata$Affected<-aggdata$FATALITIES+aggdata$INJURIES
p <- ggplot(aggdata, aes(map_id = STATE))
p + geom_map(aes(fill = Affected), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
print(p)
p <- ggplot(aggdata, aes(map_id = STATE))
p <- p + geom_map(aes(fill = Affected), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
p <- p + labs(x = "Long", y = "Lat", title = title)
print(p)
states_map
aggdata
aggdata$STATE
states_map_regions<-unique(states_map$region)
states_map_regions
data<-read.csv('events.agg.csv')
aggdata<-aggregate(data[,c('FATALITIES','INJURIES','PROPDMG','CROPDMG')],by=list(data$STATE),FUN=sum)
aggdata
aggdata$Affected = aggdata$FATALITIES+aggdata$INJURIES
p <- ggplot(aggdata, aes(map_id = STATE))
p <- p + geom_map(aes(fill = Affected), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
p <- p + labs(x = "Long", y = "Lat", title = title)
print(p)
colnames(aggdata)<-c("STATE","FATALITIES","INJURIES","PROPDMG","CROPDMG","Affected")
p <- ggplot(aggdata, aes(map_id = STATE))
p <- p + geom_map(aes(fill = Affected), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
p <- p + labs(x = "Long", y = "Lat", title = title)
print(p)
aggdata$STATE<-as.character(aggdata$STATE)
p <- ggplot(aggdata, aes(map_id = STATE))
p <- p + geom_map(aes(fill = Affected), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
print(p)
aggdata$Damages<-aggdata$CROPDMG+aggdata$PROPDMG
p <- ggplot(aggdata, aes(map_id = STATE))
p <- p + geom_map(aes(fill = Damages), map = states_map, colour='black') + expand_limits(x = states_map$long, y = states_map$lat)
p <- p + coord_map() + theme_bw()
print(p)
setwd("~/Documents/data science-nanodegree/explore and summarise data")
years<-read.csv('years.csv')
library(ggplot2)
ggplot(data=years, aes(x=YEAR, y=COUNT)) +
geom_bar(stat="identity")
ggplot(data=years, aes(x=YEAR, y=COUNT)) +
geom_bar(stat="identity")+geom_histogram(binwidth=200)
ggplot(data=years, aes(x=YEAR, y=COUNT)) +
geom_bar(stat="identity")+scale_x_continuous()
ggplot(data=years, aes(x=YEAR, y=COUNT)) +
geom_bar(stat="identity")+scale_x_discrete()
ggplot(data=years, aes(x=YEAR, y=COUNT)) +
geom_line(colour="red", linetype="dashed", size=1.5) +
geom_point(colour="red", size=4, shape=21, fill="white")
ggplot(data=years, aes(x=YEAR, y=COUNT)) +
geom_line() +
geom_point()
nPlot(
Count ~ Year,
data = data[order(data$Year)],
type = "lineChart", dom = 'eventsByYear', width = 650
)
library(rCharts)
nPlot(
Count ~ Year,
data = data[order(data$Year)],
type = "lineChart", dom = 'eventsByYear', width = 650
)
nPlot(
COUNT ~ YEAR,
data = years,
type = "lineChart", dom = 'eventsByYear', width = 650
)
economicImpact <- nPlot(
value ~ YEAR, group = 'variable', data = data[order(-YEAR, variable, decreasing = T)],
type = 'stackedAreaChart', dom = 'economicImpact', width = 650
)
economicImpact <- nPlot(
value ~ YEAR, group = 'variable', data = years[order(-YEAR, variable, decreasing = T)],
type = 'stackedAreaChart', dom = 'economicImpact', width = 650
)
nPlot(
+     FATALITIES ~ YEAR,
+     data = years,
+     type = "lineChart", dom = 'eventsByYear', width = 650
+ )
nPlot(
FATALITIES ~ YEAR,
data = years,
type = "lineChart", dom = 'eventsByYear', width = 650
)
nPlot(
INJURIES ~ YEAR,
data = years,
type = "lineChart", dom = 'eventsByYear', width = 650
)
states<-read.csv('aggregate.csv')
ggplot(data=states, aes(x=STATE, y=COUNT)) +
+     geom_bar(stat="identity")+scale_x_continuous()
ggplot(data=states, aes(x=STATE, y=COUNT)) +
geom_bar(stat="identity")+scale_x_continuous()
ggplot(data=states, aes(x=STATE, y=COUNT)) +
geom_bar(stat="identity")+scale_x_discrete()
ggplot(data=states, aes(x=STATE, y=COUNT)) +
geom_bar(stat="identity")+scale_x_discrete()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=states, aes(x=STATE, y=FATALITIES)) +
geom_bar(stat="identity")+scale_x_discrete()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=states, aes(x=STATE, y=PROPDMG)) +
geom_bar(stat="identity")+scale_x_discrete()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=states, aes(x=STATE, y=CROPDMG)) +
geom_bar(stat="identity")+scale_x_discrete()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
x<-nPlot(
COUNT ~ YEAR,
data = years,
type = "lineChart", dom = 'eventsByYear', width = 650
)
print(x)
print(z)
structure(years)
summary(years)
data <- read.csv("repdata_data_StormData.csv.bz2", header = TRUE, sep = ",",
colClasses = c("numeric", "character", "character", "character", "numeric",
"character", "character", "character", "numeric", "character",
"character",
"character", "character", "numeric", "character", "character",
"character",
"character", "numeric", "numeric", "character", "numeric", "numeric",
"numeric", "numeric", "character", "numeric", "character", "character",
"character", "character", "numeric", "numeric", "numeric", "numeric",
"character", "numeric"))
smallData <- data[data$FATALITIES > 0 | data$INJURIES > 0 | data$PROPDMG > 0 |
data$CROPDMG > 0, ]
convection <- c("?.*LIGHTING|LIGHTN|LIGNTNING|TORNADO|
TORNDAO|WIND|TSTM|THUNDER|WND|HAIL|TURBULENCE|GUSTNADO?.*")
temperature <- c("?.*COLD|HEAT|WARM|TEMPERATURE|THERMIA?.*")
flood <- c("?.*FLOOD|RISING|STREAM FLD?.*")
marine <- c("?.*COASTAL|TSUNAMI|CURRENT|SWELLS|
TIDE|WAVE|SEAS|SURF|HIGH WATER?.*")
cyclones <- c("?.*CYCLONE|HURRICANE|TYPHOON?.*")
winter <- c("?.*WINT|ICE|AVALAN|SLEET|SNOW|
FREEZ|BLIZZ|FROST|GLAZE|MIXED?.*")
#find and replace all occurences of events and aggregate using categories above
smallData[grepl(winter, smallData$EVTYPE,
ignore.case = TRUE), "category"] = "Winter"
smallData[grepl(cyclones, smallData$EVTYPE,
ignore.case = TRUE), "category"] = "Tropical Cyclones"
smallData[grepl(marine, smallData$EVTYPE,
ignore.case = TRUE), "category"] = "Marine"
smallData[grepl(flood, smallData$EVTYPE,
ignore.case = TRUE), "category"] = "Flood"
smallData[grepl(temperature, smallData$EVTYPE,
ignore.case = TRUE), "category"] = "Extreme Temperatures"
smallData[grepl(convection, smallData$EVTYPE,
ignore.case = TRUE), "category"] = "Convection"
smallData[is.na(smallData$category), "category"] = "Other"
smallData$propertydamageEXP = 1
smallData[grepl("h|H", smallData$PROPDMGEXP,
ignore.case = TRUE), "propertydamageEXP"] = 100
smallData[grepl("k|K", smallData$PROPDMGEXP,
ignore.case = TRUE), "propertydamageEXP"] = 1000
smallData[grepl("m|M", smallData$PROPDMGEXP,
ignore.case = TRUE), "propertydamageEXP"] = 1e+06
smallData[grepl("b|B", smallData$PROPDMGEXP,
ignore.case = TRUE), "propertydamageEXP"] = 1e+09
smallData$propertydamage = smallData$PROPDMG * smallData$propertydamageEXP
# converting each class of damages to respective damages in millions(USD)
smallData$cropdamageEXP = 1
smallData[grepl("k|K", smallData$CROPDMGEXP,
ignore.case = TRUE), "cropdamageEXP"] = 1000
smallData[grepl("m|M", smallData$CROPDMGEXP,
ignore.case = TRUE), "cropdamageEXP"] = 1e+06
smallData[grepl("b|B", smallData$CROPDMGEXP,
ignore.case = TRUE), "cropdamageEXP"] = 1e+09
smallData$cropdamage = smallData$CROPDMG * smallData$cropdamageEXP
county<-table(smallData$COUNTYNAME)
out=data.frame(item=names(unlist(county)),count=unlist(county)[],
stringsAsFactors=FALSE)
ggplot(out, aes(x=count)) + geom_histogram(binwidth=200)+
xlab("number of events occurring in respective counties")+xlim(0,1000)
ggplot(out, aes(x=count)) + geom_histogram(binwidth=200)+
xlab("number of events occurring in respective counties")+xlim(0,750)
+scale_x_continuous()
ggplot(out, aes(x=count)) + geom_histogram(binwidth=100)+
xlab("number of events occurring in respective counties")+xlim(0,750)
+scale_x_continuous()
ggplot(out, aes(x=count)) + geom_histogram(binwidth=300)+
xlab("number of events occurring in respective counties")+xlim(0,750)
+scale_x_continuous()
ggplot(out, aes(x=count)) + geom_histogram(binwidth=50)+
xlab("number of events occurring in respective counties")+xlim(0,750)
+scale_x_continuous()
mean(out$count)
summary(smallData)
ggplot(smallData, aes(x=category)) + geom_histogram(binwidth=50)+
xlab("number of events occurring in respective counties")+xlim(0,750)
+scale_x_continuous()
ggplot(smallData, aes(x=category)) + geom_histogram(binwidth=50)+
xlab("number of events occurring in respective counties")+xlim(0,750)
+scale_x_discrete()
ggplot(smallData, aes(x=category)) + geom_histogram(binwidth=50)+
xlab("number of events occurring in respective counties")
ggplot(smallData, aes(x=FATALITIES)) + geom_histogram(binwidth=50)+
xlab("Number of Fatalities")
ggplot(smallData, aes(x=FATALITIES)) + geom_histogram(binwidth=50)+
xlab("Number of Fatalities")+xlim(0,100)
ggplot(smallData, aes(x=FATALITIES)) + geom_histogram(binwidth=50)+
xlab("Number of Fatalities")+xlim(0,50)
ggplot(smallData, aes(x=INJURIES)) + geom_histogram(binwidth=50)+
xlab("Number of Fatalities")+xlim(0,50)
ggplot(smallData, aes(x=INJURIES)) + geom_histogram()+
xlab("Number of Fatalities")+xlim(0,50)
ggplot(smallData, aes(x=INJURIES)) + geom_histogram()+
xlab("Number of Fatalities")+xlim(0,20)
ggplot(smallData, aes(x=INJURIES)) + geom_histogram()+
xlab("Number of Fatalities")+xlim(0,10)
ggplot(smallData, aes(x=INJURIES)) + geom_histogram()+
xlab("Number of Fatalities")+xlim(0,2.5)
ggplot(smallData, aes(x=FATALITIES)) + geom_histogram()+
xlab("Number of Fatalities")+xlim(0,100)
ggplot(smallData, aes(x=FATALITIES)) + geom_histogram()+
xlab("Number of Fatalities")+xlim(0,10)
ggplot(smallData, aes(x=PROPDMG)) + geom_histogram()+
xlab("Number of Fatalities")+xlim(0,10)
ggplot(smallData, aes(x=PROPDMG)) + geom_histogram()+
xlab("Number of Fatalities")+xlim(0,20)
ggplot(smallData, aes(x=PROPDMG)) + geom_histogram()+
xlab("Number of Fatalities")+xlim(0,30)
ggplot(smallData, aes(x=PROPDMG)) + geom_histogram()+
xlab("Number of Fatalities")+xlim(0,40)
ggplot(smallData, aes(x=PROPDMG)) + geom_histogram()+
xlab("Number of Fatalities")+xlim(0,100)
ggplot(smallData, aes(x=PROPDMG)) + geom_histogram()+
xlab("Number of Fatalities")+xlim(0,30)
summary(smallData$PROPDMG)
ggplot(smallData, aes(x=PROPDMG)) + geom_histogram()+
xlab("Property Damage in Millions")+xlim(0,40)
ggplot(smallData, aes(x=PROPDMG)) + geom_histogram()+
xlab("Property Damage in Millions")+xlim(0,50)
summary(smallData$CROPDMG)
ggplot(smallData, aes(x=CROPDMG)) + geom_histogram()+
xlab("Crops Damage in Millions")+xlim(0,30)
ggplot(smallData, aes(x=EVTYPE)) + geom_histogram()+
xlab("Crops Damage in Millions")+xlim(0,30)
ggplot(smallData, aes(x=EVTYPE)) + geom_histogram()+
xlab("Crops Damage in Millions")
summary(smallData$EVTYPE)
smallData$EVTYPE<-as.factor(smallData$EVTYPE)
table(smallData$EVTYPE)
ll<-data.frame(table(smallData$EVTYPE))
ll
ll[order(-ll[,1]),]
ll[order(-ll[,2]),]
ll<-ll[order(-ll[,2]),]
smallData$REMARKS
scale_x_continuous()
